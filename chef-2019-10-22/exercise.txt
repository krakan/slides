$ mkdir ~/try-chef-infra
$ cd ~/try-chef-infra
$ curl -o docker-compose.yml https://raw.githubusercontent.com/learn-chef/chef/master/docker-compose.yml
$ docker-compose pull
$ docker-compose up -d
$ docker exec -it workstation bash
# chef-run web1 file hello.txt
# ssh web1 cat /hello.txt
# ssh web1 ls -l /hello.txt
# chef-run web1 file hello.txt content='Hello World!'
# ssh web1 cat /hello.txt
# chef-run web1 file hello.txt action=delete
# ssh web1 cat /hello.txt
# cat recipe.rb
  apt_update

  package 'figlet'

  directory '/tmp'

  execute 'write_hello_world' do
      command 'figlet Hello World! > /tmp/hello.txt'
      not_if { File.exist?('/tmp/hello.txt') }
  end

# chef-run web1 recipe.rb
# ssh web1 cat /tmp/hello.txt
$ tree webserver
  webserver/
  |-- README.md
  |-- metadata.rb
  |-- recipes
  |   `-- default.rb
  `-- templates
      `-- index.html.erb

# cat webserver/recipes/default.rb
#
# Cookbook:: webserver
# Recipe:: default
#
# Copyright:: 2018, The Authors, All Rights Reserved.
  apt_update

  package 'apache2'

  template '/var/www/html/index.html' do
    source 'index.html.erb'
  end

  service 'apache2' do
    action [:enable, :start]
  end

# cat webserver/templates/index.html.erb
  <html>
    <head>
      <title>Learn Chef Demo</title>
    </head>
    <body>
      <h1>Hello Learn Chef</h1>
      <p>This is < % =node['hostname']% ></p>
    </body>
  </html>

# chef-run web[1:2] webserver
# curl web1
# curl web2
# cat loadbalancer/recipes/default.rb
  #
  # Cookbook:: loadbalancer
  # Recipe:: default
  #
  # Copyright:: 2018, The Authors, All Rights Reserved.
  apt_update
  package 'haproxy'

  directory '/etc/haproxy'

  template '/etc/haproxy/haproxy.cfg' do
      source 'haproxy.cfg.erb'
  end

  service 'haproxy' do
      action [:enable, :start]
  end

# cat loadbalancer/templates/haproxy.cfg.erb
  global
      log         127.0.0.1 local2

      chroot      /var/lib/haproxy
      pidfile     /var/run/haproxy.pid
      maxconn     4000
      user        haproxy
      group       haproxy
      daemon     stats socket /var/lib/haproxy/stats

  defaults
      mode                    http
      log                     global
      option                  httplog
      option                  dontlognull
      option http-server-close
      option forwardfor       except 127.0.0.0/8
      option                  redispatch
      retries                 3
      timeout http-request    10s
      timeout queue           1m
      timeout connect         10s
      timeout client          1m
      timeout server          1m
      timeout http-keep-alive 10s
      timeout check           10s
      maxconn                 3000

  frontend  main
      bind                 *:80
      acl url_static       path_beg       -i /static /images /javascript /stylesheets
      acl url_static       path_end       -i .jpg .gif .png .css .js

      use_backend static          if url_static
      default_backend             app

  backend static
      balance     roundrobin
      server      static 127.0.0.1:4331 check

  backend app
      balance     roundrobin
      server web1 web1:80 weight 1 maxconn 100 check
      server web2 web2:80 weight 1 maxconn 100 check

# chef-run lb loadbalancer
# exit
$ docker-compose down --rmi all

group 'mygroup' do
  gid 1234
end

user 'myuser' do
  uid 1234
  gid 'mygroup'
end

file '/root/fil1' do
  owner 'myuser'
  group 'mygroup'
  mode '444'
  content "filen ligger p√• #{node['hostname']}"
end

apt_update
bash 'upgrade packages' do
  code 'apt dist-upgrade -y'
end
